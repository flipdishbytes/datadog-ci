name: 'Datadog CI'
description: 'Execute commands from your Continuous Integration (CI) and Continuous Delivery (CD) pipelines to integrate with existing Datadog products.'
inputs:
  DD_SITE:
    required: false
    default: 'us3.datadoghq.com'
  COMMAND:
    required: true

permissions:
  contents: read
  id-token: write

runs:
  using: "composite"
  steps:
    - name: Assume AWS management account role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::865076270365:role/github-ci-datadog-api-key-read-role
        aws-region: eu-west-1
        role-session-name: "GitHubActions-DeployLayerStack"
        unset-current-credentials: true

    - name: Executing Datadog CI
      continue-on-error: true
      run: |
        export DD_API_KEY=$(aws secretsmanager get-secret-value --secret-id arn:aws:secretsmanager:eu-west-1:865076270365:secret:DatadogGithubActionsApiKey-prGZpR --query SecretString --output text)
        
        export NODE_OPTIONS_BACKUP=$NODE_OPTIONS
        export NODE_OPTIONS=""
        unset NODE_OPTIONS

        if ! which datadog-ci > /dev/null 2>&1; then
              echo "Datadog CI is not installed. Proceeding with installation..."
              if curl -L --fail "https://github.com/DataDog/datadog-ci/releases/latest/download/datadog-ci_linux-x64" --output "/usr/local/bin/datadog-ci"; then
                chmod +x /usr/local/bin/datadog-ci
                echo "Datadog CI has been successfully installed."

                /usr/local/bin/datadog-ci ${{ inputs.COMMAND }}
              else
                echo "Failed to install Datadog CI. Please check your installation process."
                exit 1
              fi
        else
              echo "Datadog CI is already installed."
              datadog-ci ${{ inputs.COMMAND }}
        fi

        export NODE_OPTIONS=$NODE_OPTIONS_BACKUP
        unset DD_API_KEY
      shell: bash
      env:
          DD_SITE: ${{ inputs.DD_SITE }}
